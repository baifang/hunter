# Copyright (c) 2014, Ruslan Baratov
# All rights reserved.

cmake_minimum_required(VERSION 3.0)

include(ExternalProject) # ExternalProject_Add

# Scheme for download and install OpenSSL library for Windows

list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")

include(hunter_assert_lists_equal)
include(hunter_fatal_error)
include(hunter_internal_error)
include(hunter_status_debug)
include(hunter_test_string_not_empty)

hunter_status_debug("Scheme: url_sha1_openssl_windows")

# Check preconditions
hunter_test_string_not_empty("@HUNTER_SELF@")
hunter_test_string_not_empty("@HUNTER_BASE@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_BASENAME@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_URL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SHA1@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_INSTALL_DIR@")
hunter_test_string_not_empty("@HUNTER_MSVC_ARCH@")
hunter_test_string_not_empty("@HUNTER_MSVC_VCVARSALL@")

hunter_assert_lists_equal(@HUNTER_DOWNLOAD_SCHEME_VARIANTS@)

set_directory_properties(
    PROPERTIES
    EP_BASE
    "@HUNTER_BASE@"
)

# NOTE: If prefix contain spaces `nmake` will fail

if(MSVC_VERSION VERSION_LESS 1800)
  hunter_fatal_error(
      "OpenSSL: MSVC 2013 minimum required"
      "(version 1800, generator `Visual Studio 12`)"
      WIKI "https://github.com/ruslo/hunter/wiki/Error-%28openssl-visual-studio-2013-required%29"
  )
endif()

# `find_package(Perl)` is not suitable because `perl` from
# cygwin directory can be found
execute_process(
    COMMAND
    "perl"
    "--version"
    RESULT_VARIABLE
    PERL_VERSION
)

if(NOT "${PERL_VERSION}" EQUAL 0)
  message("Current PATH directories:")
  message(">>>")
  foreach(x $ENV{PATH})
    foreach(y ${x})
      message("    ${y}")
    endforeach()
  endforeach()
  message("\n<<<")

  hunter_fatal_error(
      "OpenSSL: perl not found"
      WIKI "https://github.com/ruslo/hunter/wiki/Error-%28openssl-perl-not-found%29"
  )
endif()

string(COMPARE EQUAL "@HUNTER_MSVC_ARCH@" "amd64" is_amd64)
if(is_amd64)
  set(opt "VC-WIN64A")
  set(do_ms do_win64a.bat)
else()
  set(opt "VC-WIN32")
  set(do_ms do_ms.bat)
endif()

###
ExternalProject_Add(
    @HUNTER_PACKAGE_BASENAME@
    URL
    "@HUNTER_PACKAGE_URL@"
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    SOURCE_DIR
    "@HUNTER_BASE@/Source/@HUNTER_PACKAGE_BASENAME@"
        # Out of source build is not working.
        # Sources will be unpacked for each tag for different directories
        # and build in source.
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_DIR@"
        # not used, just avoid creating Install/<name> empty directory
    ###
    CONFIGURE_COMMAND
    "@HUNTER_MSVC_VCVARSALL@" "@HUNTER_MSVC_ARCH@"
    COMMAND
    perl Configure "${opt}" no-asm "--prefix=@HUNTER_PACKAGE_INSTALL_DIR@"
    COMMAND
    ms/${do_ms}
    ###
    BUILD_COMMAND
    nmake -f "ms\\nt.mak"
    BUILD_IN_SOURCE
    1
    ###
    INSTALL_COMMAND
    COMMAND
    nmake -f "ms\\nt.mak" install
)
